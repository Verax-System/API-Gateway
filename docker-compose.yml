version: '3.8'

services:
  # 1. API GATEWAY (O PONTO DE ENTRADA ÚNICO)
  gateway:
    image: nginx:1.25-alpine
    container_name: api-gateway
    ports:
      - "80:80" # ÚNICA porta exposta para seu PC: http://localhost
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - plataforma-network
    depends_on:
      - auth-api
      - sales-api
      - fleet-api
      - auth-ui
      - sales-ui
      - fleet-ui

  # 2. SISTEMA DE AUTENTICAÇÃO (VERAX-AUTHAPI)
  auth-api:
    build: ./auth-api
    container_name: auth-api
    env_file: ./auth-api/.env
    # CORRIGIDO: Aumenta o tempo de espera para 10s
    command: >
      sh -c "echo 'Auth-API: Aguardando o banco de dados...' && 
             sleep 10 && 
             echo 'Auth-API: Rodando migrações...' && 
             alembic upgrade head && 
             echo 'Auth-API: Iniciando servidor...' && 
             uvicorn main:app --host 0.0.0.0 --port 8001 --reload"
    volumes:
      - ./auth-api:/app
    networks:
      - plataforma-network
    depends_on:
      - auth-db

  auth-db:
    image: postgres:13
    container_name: auth-db
    env_file: ./auth-api/.env # O auth-db usa as vars daqui
    ports:
      - "5432:5432"
    volumes:
      - auth-data:/var/lib/postgresql/data
    networks:
      - plataforma-network

  auth-ui:
    build: ./auth-ui
    container_name: auth-ui
    command: npm run dev
    volumes:
      - ./auth-ui:/app
      - /app/node_modules
    networks:
      - plataforma-network

  # 3. SISTEMA DE VENDAS (VRSALES)
  sales-api:
    build: ./sales-api
    container_name: sales-api
    env_file: ./sales-api/.env
    # CORRIGIDO: Aumenta o tempo de espera para 10s
    command: >
      sh -c "echo 'Sales-API: Aguardando o banco de dados...' &&
             sleep 10 &&
             echo 'Sales-API: Rodando migrações...' &&
             alembic upgrade head &&
             echo 'Sales-API: Iniciando servidor...' &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./sales-api:/app
    networks:
      - plataforma-network
    depends_on:
      - sales-db

  sales-db:
    image: postgres:15-alpine
    container_name: sales-db
    env_file: ./sales-api/.env # O sales-db usa as vars daqui
    ports:
      - "5433:5432"
    volumes:
      - sales-data:/var/lib/postgresql/data
    networks:
      - plataforma-network

  sales-ui:
    build: ./sales-ui
    container_name: sales-ui
    command: npm run dev
    volumes:
      - ./sales-ui:/app
      - /app/node_modules
    networks:
      - plataforma-network

  # 4. SISTEMA DE FROTA (TRUCAR)
  fleet-api:
    build: ./fleet-api
    container_name: fleet-api
    env_file: ./fleet-api/.env
    # CORRIGIDO: Aumenta o tempo de espera e corrige comando alembic
    command: >
      sh -c "echo 'Fleet-API: Aguardando o banco de dados...' &&
             sleep 10 &&
             echo 'Fleet-API: Rodando migrações...' &&
             alembic -c alembic.ini upgrade head &&
             echo 'Fleet-API: Iniciando servidor...' &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./fleet-api:/app
      - ./fleet-api/static/uploads:/app/static/uploads
    networks:
      - plataforma-network
    depends_on:
      - fleet-db

  fleet-db:
    image: postgres:15-alpine
    container_name: fleet-db
    env_file: ./fleet-api/.env # O fleet-db usa as vars daqui
    ports:
      - "5434:5432"
    volumes:
      - fleet-data:/var/lib/postgresql/data
    networks:
      - plataforma-network

  fleet-ui:
    build: ./fleet-ui
    container_name: fleet-ui
    command: npm run dev
    volumes:
      - ./fleet-ui:/app
      - /app/node_modules
    networks:
      - plataforma-network

networks:
  plataforma-network:
    driver: bridge

volumes:
  auth-data:
  sales-data:
  fleet-data: